[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "open-mre"
license = { text = "MIT" }
version = "0.1.0"
description = "Automated system for validating Minimal Reproducible Examples (MREs) from bug reports"
readme = "README.md"
requires-python = ">=3.11.0,<4.0.0"
dependencies = [
    "langchain>=1.0.0,<2.0.0",
    "langchain-core>=1.0.0,<2.0.0",
    "langchain-anthropic>=1.0.0,<2.0.0",
    "langgraph>=1.0.0,<2.0.0",
    "langgraph-cli[inmem]>=0.4.4,<1.0.0",
    "deepagents",
    "python-dotenv>=1.0.0,<2.0.0",
    "daytona>=0.111.1",
    "httpx>=0.28.1,<1.0.0",
    "pydantic>=2.0.0,<3.0.0",
]

[dependency-groups]
test = [
    "pytest>=8.0.0,<9.0.0",
    "pytest-asyncio>=0.21.0,<2.0.0",
    "pytest-xdist>=3.0.0,<4.0.0",
    "pytest-socket>=0.6.0,<1.0.0",
]

test_integration = [
    "pytest>=8.0.0,<9.0.0",
    "pytest-asyncio>=0.21.0",
]

lint = [
    "ruff>=0.14.1,<1.0.0",
]

typing = [
    "mypy>=1.18.2,<2.0.0",
]

[project.scripts]
open-mre = "open_mre.main:main"

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [ "ALL",]
ignore = [
    "C90",     # McCabe complexity
    "COM812",  # Messes with the formatter
    "FIX002",  # Line contains TODO
    "PERF203", # Rarely useful
    "PLR09",   # Too many something (arg, statements, etc)
    "RUF012",  # Doesn't play well with Pydantic
    "TC001",   # Doesn't play well with Pydantic
    "TC002",   # Doesn't play well with Pydantic
    "TC003",   # Doesn't play well with Pydantic
    "TD002",   # Missing author in TODO
    "TD003",   # Missing issue link in TODO
    "PLC0415", # pylint: import-outside-top-level
    "TRY301",  # tryceratops: raise-within-try

    # TODO
    "T201",     # Print statement found
    "BLE001",   # Blind except
    "PLR2004",  # Magic value comparisons
    "E402",     # Module level import not at top of file
    "ANN401",   # Any type
]
unfixable = [
    "B028",    # People should intentionally tune the stacklevel
    "PLW1510", # People should intentionally set the check argument
]

[tool.ruff.lint.pydocstyle]
convention = "google"
ignore-var-parameters = true  # ignore missing documentation for *args and **kwargs parameters

[tool.ruff.lint.extend-per-file-ignores]
"tests/**/*.py" = [
    "D1",      # Docstrings not mandatory in tests
    "S101",    # Tests need assertions
    "S311",    # Standard pseudo-random generators are not suitable for cryptographic purposes
    "SLF001",  # Private member access in tests
    "PLR2004", # Magic value comparisons
]
"tests/integration_tests/examples/*.py" = [
    "INP001",   # Not a package
    "EXE001",   # Only examples
]
"**/__init__.py" = [
    "D104",    # Missing docstring in public package
]

[tool.mypy]
plugins = ["pydantic.mypy"]
strict = true
ignore_missing_imports = true
enable_error_code = "deprecated"
warn_unreachable = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
